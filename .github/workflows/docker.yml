name: Docker

on:
  pull_request:
    branches:
      - "master"
    paths:
      - "*.?Dockerfile"
      - "CMakeLists.txt"
      - "libmediocre/**"
      - ".github/workflows/docker.yml"
  push:
    branches:
      - "master"
    paths:
      - "*.?Dockerfile"
      - "CMakeLists.txt"
      - "libmediocre/**"
      - ".github/workflows/docker.yml"
  release:
    types:
      - "published"

jobs:

  preliminary:
    name: Variables
    runs-on: ubuntu-latest
    outputs:
      docker-base-changed: ${{ steps.base-dockerfile-changed.outputs.any_changed }}
      build-args-base-tag: ${{ steps.find-base-image.outputs.build-args-base-tag }}
      docker-base-sha-name: ${{ steps.get-tags.outputs.docker-base-sha-name }}
      docker-base-name: ${{ steps.get-tags.outputs.docker-base-name }}
      docker-main-sha-name: ${{ steps.get-tags.outputs.docker-main-sha-name }}
      docker-main-name: ${{ steps.get-tags.outputs.docker-main-name }}
    env:
      DOCKER_TAG_PREFIX: ${{ github.event_name == 'release' && '' || 'dev-' }}
      DOCKER_TAG_SUFFIX: ${{ github.head_ref || github.ref_name }}
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v3
      -
        name: Check if base dockerfile has changed
        id: base-dockerfile-changed
        uses: tj-actions/changed-files@v36
        with:
          files: "Base.Dockerfile"
          since_last_remote_commit: true
      -
        name: Get tag names
        id: get-tags
        run: |
          export docker_base_sha_tag=base-${DOCKER_TAG_PREFIX}$(git rev-parse --short HEAD)
          echo "docker-base-sha-tag=$docker_base_sha_tag" >> $GITHUB_OUTPUT
          echo "docker-base-sha-name=obroomhall/mediocre:$docker_base_sha_tag" >> $GITHUB_OUTPUT
          
          export docker_base_tag=base-${DOCKER_TAG_PREFIX}${DOCKER_TAG_SUFFIX}
          echo "docker-base-tag=$docker_base_tag" >> $GITHUB_OUTPUT
          echo "docker-base-name=obroomhall/mediocre:$docker_base_tag" >> $GITHUB_OUTPUT
          
          echo "docker-base-fallback-tag=base-${DOCKER_TAG_PREFIX}master" >> $GITHUB_OUTPUT
          
          echo "docker-main-sha-name=obroomhall/mediocre:${DOCKER_TAG_PREFIX}$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "docker-main-name=obroomhall/mediocre:${DOCKER_TAG_PREFIX}${DOCKER_TAG_SUFFIX}" >> $GITHUB_OUTPUT
      -
        name: Print tag names
        id: print-tags
        run: |
          echo "Base images:"
          echo "  docker-base-sha-name=${{ steps.get-tags.outputs.docker-base-sha-name }}"
          echo "  docker-base-name=${{ steps.get-tags.outputs.docker-base-name }}"
          echo "Main images:"
          echo "  docker-main-sha-name=${{ steps.get-tags.outputs.docker-main-sha-name }}"
          echo "  docker-main-name=${{ steps.get-tags.outputs.docker-main-name }}"
      -
        name: Determine base image to use
        id: find-base-image
        run: |
          export base_image_file_changed=${{ steps.base-dockerfile-changed.outputs.any_changed }}
          export base_image_exists=$(docker manifest inspect ${{ steps.get-tags.outputs.docker-base-name }} >/dev/null 2>&1 && echo yes)
          
          export base_image=$([[ $base_image_file_changed == 'true' ]] && echo ${{ steps.get-tags.outputs.docker-base-sha-tag }} \
            || ([[ $base_image_exists == 'yes' ]] && echo ${{ steps.get-tags.outputs.docker-base-tag }} \
            || echo ${{ steps.get-tags.outputs.docker-base-fallback-tag }}))
          
          echo "Using $base_image"
          echo build-args-base-tag=$base_image >> $GITHUB_OUTPUT

  intermediate-build-push:
    name: Build intermediate images
    runs-on: ubuntu-latest
    needs: preliminary
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Build and push base image
        if: needs.preliminary.outputs.docker-base-changed == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Base.Dockerfile
          tags: ${{ needs.preliminary.outputs.docker-base-sha-name }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Build and push main image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          build-args: |
            BASE_REPO=obroomhall/mediocre
            BASE_TAG=${{ needs.preliminary.outputs.build-args-base-tag }}
          tags: ${{ needs.preliminary.outputs.docker-main-sha-name }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  intermediate-test:
    name: Test intermediate images
    runs-on: ubuntu-latest
    needs: [ preliminary, intermediate-build-push ]
    env:
      GRPC_CLIENT_CLI_VERSION: 1.18.0
    steps:
      -
        name: Pull main image
        run: docker pull ${{ needs.preliminary.outputs.docker-main-sha-name }}
      -
        name: Install testing tools
        run: curl -L -s https://github.com/vadimi/grpc-client-cli/releases/download/v${{ env.GRPC_CLIENT_CLI_VERSION }}/grpc-client-cli_linux_x86_64.tar.gz | tar -C /usr/local/bin -xz
      -
        name: Start main image
        run: docker run -d --rm -p localhost:80:50051/tcp ${{ needs.preliminary.outputs.docker-main-sha-name }}
      -
        name: Check health
        run: grpc-client-cli health localhost:80
      -
        name: Check OpenCV
        run: |
          check_opencv=$(echo '{}' | grpc-client-cli -service Dependency -method CheckOpenCV localhost:50051)
          echo $check_opencv && [[ $(echo $check_opencv | jq '.healthy') == 'true' ]]
      -
        name: Check Tesseract
        run: |
          check_tesseract=$(echo '{}' | grpc-client-cli -service Dependency -method CheckTesseract localhost:50051)
          echo $check_tesseract && [[ $(echo $check_tesseract | jq '.healthy') == 'true' ]]

  final-push:
    name: Push final images
    runs-on: ubuntu-latest
    needs: [ preliminary, intermediate-test ]
    steps:
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Re-tag and push base image
        if: needs.preliminary.outputs.docker-base-changed == 'true'
        run: |
          export intermediate_image=${{ needs.preliminary.outputs.docker-base-sha-name }}
          export final_image=${{ needs.preliminary.outputs.docker-base-name }}
          docker pull $intermediate_image
          docker image tag $intermediate_image $final_image
          docker push $final_image
      -
        name: Re-tag and push main image
        run: |
          export intermediate_image=${{ needs.preliminary.outputs.docker-main-sha-name }}
          export final_image=${{ needs.preliminary.outputs.docker-main-name }}
          docker pull $intermediate_image
          docker image tag $intermediate_image $final_image
          docker push $final_image
