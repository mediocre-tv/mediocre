name: Docker

on:
  pull_request:
    paths:
      - .github/workflows/docker.yml
      - Dockerfile
      - CMakeLists.txt
      - libmediocre/**
  push:
    branches:
      - .github/workflows/docker.yml
      - Dockerfile
      - CMakeLists.txt
      - libmediocre/**
  release:
    types:
      - "published"

env:
  DOCKER_USERNAME: obroomhall
  DOCKER_REPOSITORY: obroomhall/mediocre

jobs:

  preliminary:
    name: Variables
    runs-on: ubuntu-latest
    outputs:
      docker-image-sha-name: ${{ steps.get-tags.outputs.docker-image-sha-name }}
      docker-image-name: ${{ steps.get-tags.outputs.docker-image-name }}
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v3
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Get tag names
        id: get-tags
        env:
          DOCKER_TAG_PREFIX: ${{ github.event_name == 'release' && '' || 'dev-' }}
          DOCKER_TAG_SUFFIX: ${{ github.head_ref || github.ref_name }}
        run: |
          export repo=${{ env.DOCKER_REPOSITORY }}
          echo "docker-image-sha-name=$repo:${DOCKER_TAG_PREFIX}$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "docker-image-name=$repo:${DOCKER_TAG_PREFIX}${DOCKER_TAG_SUFFIX}" >> $GITHUB_OUTPUT
      -
        name: Print tag names
        id: print-tags
        run: |
          echo "Main images:"
          echo "  docker-image-sha-name=${{ steps.get-tags.outputs.docker-image-sha-name }}"
          echo "  docker-image-name=${{ steps.get-tags.outputs.docker-image-name }}"

  intermediate-build-push:
    name: Build and push intermediate image
    runs-on: ubuntu-latest
    needs: preliminary
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            obroomhall/mediocre
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          tags: ${{ needs.preliminary.outputs.docker-image-sha-name }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  intermediate-test:
    name: Test intermediate image
    runs-on: ubuntu-latest
    needs: [ preliminary, intermediate-build-push ]
    steps:
      - # Pull is faster than using cache from build-push-action and using `load: true`
        name: Pull image
        run: |
          docker pull ${{ needs.preliminary.outputs.docker-image-sha-name }}
      -
        name: Install testing tools
        env:
          GRPC_CLIENT_CLI_VERSION: 1.18.0
        run: curl -L -s https://github.com/vadimi/grpc-client-cli/releases/download/v${{ env.GRPC_CLIENT_CLI_VERSION }}/grpc-client-cli_linux_x86_64.tar.gz | tar -C /usr/local/bin -xz
      -
        name: Start container
        run: |
          docker run -d --rm -p 127.0.0.1:80:50051/tcp ${{ needs.preliminary.outputs.docker-image-sha-name }}
          export max_retries=20
          export cur_retries=0
          until [[ $(grpc-client-cli health 127.0.0.1:80 | jq -r '.status') == 'SERVING' ]]; do
            if (( $cur_retries >= $max_retries )); then exit 1; fi
            echo "Waiting for a healthy container...($cur_retries/$max_retries)"
            sleep 0.05
            export cur_retries=$((cur_retries+1))
          done
          echo "Container is healthy!"
      -
        name: Check OpenCV
        run: |
          check_opencv=$(echo '{}' | grpc-client-cli -service Dependency -method CheckOpenCV 127.0.0.1:80)
          echo $check_opencv && [[ $(echo $check_opencv | jq '.healthy') == 'true' ]]
      -
        name: Check Tesseract
        run: |
          check_tesseract=$(echo '{}' | grpc-client-cli -service Dependency -method CheckTesseract localhost:80)
          echo $check_tesseract && [[ $(echo $check_tesseract | jq '.healthy') == 'true' ]]

  final-push:
    name: Push final image
    runs-on: ubuntu-latest
    needs: [ preliminary, intermediate-test ]
    steps:
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Re-tag and push image
        run: |
          export intermediate_image=${{ needs.preliminary.outputs.docker-image-sha-name }}
          export final_image=${{ needs.preliminary.outputs.docker-image-name }}
          docker pull $intermediate_image
          docker image tag $intermediate_image $final_image
          docker push $final_image
